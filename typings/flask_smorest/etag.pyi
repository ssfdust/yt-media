from .compat import MARSHMALLOW_VERSION_MAJOR as MARSHMALLOW_VERSION_MAJOR
from .exceptions import (
    CheckEtagNotCalledError as CheckEtagNotCalledError,
    NotModified as NotModified,
    PreconditionFailed as PreconditionFailed,
    PreconditionRequired as PreconditionRequired,
)
from .utils import deepupdate as deepupdate, get_appcontext as get_appcontext
from marshmallow.schema import SchemaMeta as SchemaMeta
from typing import Any, Callable, Dict, Optional, Union

class EtagMixin:
    METHODS_CHECKING_NOT_MODIFIED: Any = ...
    METHODS_NEEDING_CHECK_ETAG: Any = ...
    METHODS_ALLOWING_SET_ETAG: Any = ...
    ETAG_INCLUDE_HEADERS: Any = ...
    def etag(self, etag_schema: Union[Callable, SchemaMeta] = ...) -> Callable: ...
    def check_etag(
        self,
        etag_data: Union[Dict[str, int], None, int],
        etag_schema: Optional[SchemaMeta] = ...,
    ) -> None: ...
    def set_etag(
        self, etag_data: Any, etag_schema: Optional[SchemaMeta] = ...
    ) -> None: ...
